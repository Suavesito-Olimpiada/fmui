#!/usr/bin/env bash
# This file is part of fzf mpd user interface (FMUI).
#
# FMUI is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Foobar is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Foobar.  If not, see <http://www.gnu.org/licenses/>.

set -a # export everything
readonly PROJECT_ROOT=$(dirname `readlink -f "${BASH_SOURCE[0]}"`)

readonly GLOBAL='-g'
readonly ARRAY='-a'
readonly MAP='-A'
readonly IS_FILE='-f'

readonly DIR_CONFIG="$HOME/.config/fmui"
readonly FILE_CONFIG="$DIR_CONFIG/config"
readonly FILE_KEYBINDINGS="$DIR_CONFIG/keybindings"

readonly DEFAULT_SONG_FORMAT='[[[%artist% - ]%title%]|[%file%]]'
readonly DEFAULT_SONG_LIST_FORMAT="%time% [[[%artist% - ]%title%]|[%file%]]"
readonly DEFAULT_PREVIEW='mpc | tail -n 1'
readonly DEFAULT_PROMPT=''
readonly DEFAULT_SEEK_STEP='00:00:10'
# https://github.com/karlstav/cava
# https://github.com/dpayne/cli-visualizer
readonly DEFAULT_VISUALIZER='cava || vis'
readonly DEFAULT_MOD='ctrl'

readonly IDENTIFIER_GLOBAL_CMD="execute-silent:"

declare on_start_fill_queue=true
declare on_start_clear_queue=false
declare $ARRAY key_bindings_args
declare $MAP key_bindings
declare $MAP key_bindings_global
declare $ARRAY fzf_options=(
    --cycle
    # case-insensitive match
    -i
)

[ $IS_FILE "$FILE_CONFIG" ] &&
    source "$FILE_CONFIG"

source "$PROJECT_ROOT/info.sh"
source "$PROJECT_ROOT/actions.sh"
source "$PROJECT_ROOT/keys.sh"

[ $IS_FILE "$FILE_KEYBINDINGS" ] &&
    source "$FILE_KEYBINDINGS"

for key in ${!key_bindings[@]}; do
    # build key binding command line arguments
    key_bindings_args+=('--bind' "${key}:${key_bindings[$key]}")

    if [[ ${#key} == 1 &&
            "${key_bindings[$key]}" == "$IDENTIFIER_GLOBAL_CMD"* &&
            "${key_bindings[$key]}" != *"{"*"}"* ]]; then
        key_bindings_global+=(["${key}"]="${key_bindings[$key]:${#IDENTIFIER_GLOBAL_CMD}}")
        export key_bindings_global_`ord $key`="${key_bindings[$key]:${#IDENTIFIER_GLOBAL_CMD}}"
    fi
done


function tui {
    mpc playlist --format "%position%. ${SONG_LIST_FORMAT:-$DEFAULT_SONG_LIST_FORMAT}" | \
        fzf --no-multi --prompt "${PROMPT:-$DEFAULT_PROMPT}" --delimiter '\.' \
            --preview "${PREVIEW:-$DEFAULT_PREVIEW}" \
            --preview-window 'up:1' \
            "${fzf_options[@]}" \
            "${key_bindings_args[@]}" > /dev/null
}


function update-queue {
    # adds every song to the queue if it's not already part of it
    diff --unchanged-group-format="" --new-group-format="%>" \
        <(mpc playlist | sort) <(mpc ls | sort) | \
        mpc add
}


function clear-queue {
    mpc clear &>/dev/null
}


if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    # The exitcode will only be zero if a reload was requested.
    while
        # do
        $on_start_clear_queue && clear-queue
        $on_start_fill_queue && update-queue
        # while
        tui
    do continue ; done
fi
